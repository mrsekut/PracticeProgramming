// ============================
//
// 値型
//
// ============================

// 論理値型
// ============================

// bool

var b bool
fmt.Printf("b: %T\n", b)

// 数値型
// ============================

// int 符号付き整数型
i8 := int8(127)
i16 := int16(127)
i32 := int32(127)
i64 := int64(127)
fmt.Printf("i8: %T, i16: %T, i32: %T, i64: %T\n", i8, i16, i32, i64)


// int 符号なし整数型
i8 := uint8(127)
i16 := uint16(127)
i32 := uint32(127)
i64 := uint64(127)
fmt.Printf("i8: %T, i16: %T, i32: %T, i64: %T\n", i8, i16, i32, i64)

// int
i := 10
fmt.Printf("i: %T", i)

// float32

// float64
f64 := 3.14
fmt.Printf("f64: %T\n", f64)

// string
s := "abc"
fmt.Printf("s: %T\n", s)



// ============================
// 参照型
// ============================

// slice
// map
// channel

// ============================
// ポインタ型
// ============================
