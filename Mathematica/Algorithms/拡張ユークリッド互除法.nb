(*拡張ユークリッドの互除法*)
(* 未完成? *)
ExGCD[m_, n_] := Module[{i, q, li, x, y},
    {x, y} = If[m >= n, {m, n}, {n, m}];
    li = {{x, 1, 0}, {y, 0, 1}};
    i = 2;
    While[li[[i, 1]] != 0 ,
        q = Quotient[li[[i - 1, 1]], li[[i, 1]]];
        Join[li, li[[i - 1]] - q*li[[i]]];
        i++;
        Print[li[[i - 1]]];
    ]
]

(* 拡張ユークリッドの互除法 行列版 *)
(* ref: http://ashiato45.hatenablog.jp/entry/2018/11/04/172848 *)

myExGCD2[a_, b_] := Module[{r, q, mx},
    {q, a2} = QuotientRemainder[a, b];
    mx = {{q, 1}, {1, 0}};
    a1 = b;
    While[a2 != 0,
        a0 = a1;
        a1 = a2;
        {q, a2} = QuotientRemainder[a0, a1];
        mx = mx.{{q, 1}, {1, 0}};
    ];
    Return[{Inverse[mx].{a, b}}[[1, 1]]];
]